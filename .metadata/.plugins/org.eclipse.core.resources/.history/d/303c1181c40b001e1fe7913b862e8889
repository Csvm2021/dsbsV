package certus.edu.pe.modelo;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;

@Data
@EqualsAndHashCode(callSuper=false)
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name="productos")
@NamedQueries ({
    @NamedQuery(name = "Productos.findAdll", query = "SELECT p FROM Productos p"),
    @NamedQuery(name = "Productos.findByIdProducto", query="SELECT p FROM Productos p WHERE p.idproducto = :idproducto"),
    @NamedQuery(name = "Productos.findByNombre", query="SELECT p FROM Productos p WHERE p.nombre = :nombre"),
    @NamedQuery(name = "Productos.findByProveedor", query="SELECT p FROM Productos p WHERE p.proveedor = :proveedor"),
    @NamedQuery(name = "Productos.findByPrecio", query="SELECT p FROM Productos p WHERE p.precio = :precio"),
    @NamedQuery(name = "Productos.findByDescripcion", query="SELECT p FROM Productos p WHERE p.descripcion = :descripcion"),
    @NamedQuery(name = "Productos.findByStock", query="SELECT p FROM Productos p WHERE p.stock = :stock")
})
public class Productos {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name ="idproducto")
    private Integer idproducto;
    
    @Size(max = 100)
	@NotBlank
    @Column(name ="nombre", nullable = false)
    private String nombre;
    
    @Size(max = 100)
	@NotBlank
    @Column(name="proveedor", nullable = false)
    private String proveedor;
    
    @Size(max = 11)
	@NotBlank
    @Column(name= "precio", nullable = false)
    private Double precio;
    
    @Size(max = 255)
	@NotBlank
    @Column(name="descripcion", nullable = false)
    private String descripcion;
    
    @Size(max = 9)
	@NotBlank
    @Column(name= "stock", nullable = false)
    private String stock;
    
    @Size(max = 9)
	@NotBlank
    @ManyToOne(optional = false)
    @JoinColumn(name = "categoriasid")
    private Categorias categoriasid;
}